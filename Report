                                                    高级web Homework2
                                                          文档
                                                   水泽农 13302010061
1.	程序说明：
   利用javafx在多媒体支持、动画效果、滤镜支持、触摸事件感应处理等富Internet绚丽界面优点，以及JavaFX的动态绑定、Rectangle的使用，简单的MouseMove事件、FadeTransition函数、Copy-On-Write容器，BoxBlur均值模糊特效，用Java语言进行逻辑处理，实现一个小时候玩的弹球打砖块的游戏。
 
2.	class介绍
  1）	BaseObject：
  游戏对象的基类，继承于Parent。
  基类BaseObject中，包含有坐标和宽高的属性。基类BaseObject中没有使用常规的数据类型，而是使用的DoubleProperty。而DoubleProperty这样的类型，也正是JavaFX中的动态绑定的机制特点，set get方法只是改变DoubleProperty的值。
  利用isCollisionWith函数检测是否发生碰撞，为了方便，isCollisionWith只是简单的矩形碰撞。


2）	BrickBlock
  Main函数，用于设定游戏的框架并且初始化屏幕。

3）	GameSceen
  设置屏幕信息，加载小球和砖块。
  创建一个时间轴GameScene ，在帧中进行小球的移动，并且进行碰撞判断，每次小球碰撞砖块的数组颜色就减一，当颜色变量小于或等于0时，执行destroyobject方法。
  这个方法通过对砖块执行一个FadeTransition。FadeTransition函数是在javafx里淡化传入淡化传出，这里是让砖块进行一个缓慢的消失，然后从数组中移除。
  同时利用Copy-On-Write容器，这是是一种用于程序设计中的优化策略。其基本思路是，从一开始大家都在共享同一个内容，当某个人想要修改这个内容的时候，才会真正把内容Copy出去形成一个新的内容然后再改，这是一种延时懒惰策略。从JDK1.5开始Java并发包里提供了两个使用CopyOnWrite机制实现的并发容器,它们是CopyOnWriteArrayList和CopyOnWriteArraySet。CopyOnWrite容器非常有用，可以在非常多的并发场景中使用到。



4）	InitBricks
  通过一个二维数组来设置砖块位置信息，设置不同砖块的颜色。

5）	MainBrick
  利用javafx Rectangle函数，实现一个板子，BoxBlur使板子均值模糊。
  利用OnMouseMove函数将板子与鼠标绑定，一起运动。
 
3.   程序截图
![image](https://github.com/Shuizenong/HW2/blob/master/%E9%AB%98%E7%BA%A7web/%E5%9B%BE%E7%89%87/1.jpg)
 ![image](https://github.com/Shuizenong/HW2/blob/master/%E9%AB%98%E7%BA%A7web/%E5%9B%BE%E7%89%87/2.jpg)
 ![image](https://github.com/Shuizenong/HW2/blob/master/%E9%AB%98%E7%BA%A7web/%E5%9B%BE%E7%89%87/3.jpg)

4．  对Javafx看法
    JavaFx平台是一个构建于java技术基本上的并且容易创建和部署富客户端平台的跨平台的应用。
下图说明JavaFx 2的整体架构，分别描述了各个部件和各部分是如何联系起来的。在下面的JavaFX API的基础上就可以运行你的JavaFx代码。它包括JavaFX的高性能的图形引擎叫Prism；小而高效的窗口系统，叫Glass；还有一个媒体引擎和一个web引擎。
  ![image](https://github.com/Shuizenong/HW2/blob/master/%E9%AB%98%E7%BA%A7web/%E5%9B%BE%E7%89%87/4.jpg)
     JavaFX是一个富客户端平台，可以创建出在多种设备上都可以运行的应用，这些设备包括电脑桌面和移动设备。JavaFX其中的一个主要优点是你为其中一个设备写出的代码可以运行在任何其他设备上，因为JavaFX集成了Java runtime，只要桌面安装了Java或者手持设备支持JavaME，那么这些代码就可以运行。       
JavaFX最大的优势来自于它跟Java代码、Swing组件的交互性。JavaFX的优点之一是它能够将JavaFX应用从web浏览器中抽取到桌面，因而这将创建像WidgetFX这样的应用变得非常简单，从而提供桌面型的小程序。富视频内容通过JavaFX提供的On2 视频编码器变得可能，而且更妙的是这些视频编码器可以工作于Swing应用中。           
JavaFX应用是由JavaFX Script编写的。JavaFX Script充分利用了一款场景图形模型（scene graph model），它可以在你的UI中生成、转变和卡通制作。使用JavaFX Script你可以快速地将用户界面放置在一起，因为这个语言是专门为用户界面的创建而编写的，因而生成的应用比Swing应用感觉上更加丰富、流畅。 
javafx主要包括以下特性：
•	完全整合JDK7。
•	提供相似的语法特性同Java API。
•	新的图像处理引擎。
•	FXML，一种基于xml的语言来定义JavaFX应用。
•	一个新的媒体引擎,支持播放多媒体内容的网页。
•	web能力的扩展。
•	各种各样的内置的UI控件,包括图表、表格、菜单和窗格等。
•	跨平台。
•	与Java API相同的API格式。

总之，javafx给我的直观感受就是可以用简单的代码实现很酷炫的ui界面。
